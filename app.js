// ========================
// Select Important DOM Elements
// ========================
const highScoreTitle = document.getElementById("high-score"); // For displaying high score
const h2 = document.querySelector("h2"); // For displaying current level or messages

// ========================
// Game State Variables
// ========================
let gameSeq = []; // Stores the sequence generated by the game
let userSeq = []; // Stores the sequence clicked by the user
const btns = ["red", "green", "yellow", "purple"]; // Button colors
let started = false; // To check if game has started
let level = 0; // Current game level
let highScore = localStorage.getItem("highScore") || 0; // Highest level achieved
highScoreTitle.innerText = `High Score: ${highScore}`; // âœ… Now this is after selecting highScoreTitle

// ========================
// Start Game on Keypress
// ========================
// document.addEventListener("keypress", function () {
//     if (!started) {
//         started = true;
//         levelUp(); // Start the game by generating the first color
//     }
// });

// ========================
// Start Game on Start Button Click
// ========================
const startBtn = document.getElementById("start-btn");

startBtn.addEventListener("click", function () {
    if (!started) {
        started = true;
        levelUp(); // Start the game
        startBtn.style.display = "none"; // Hide Start button after starting
    }
});


// ========================
// Flash Animation for Game Sequence
// ========================
function gameFlash(btn) {
    btn.classList.add("flash");
    setTimeout(function () {
        btn.classList.remove("flash");
    }, 250);
}

// Flash Animation for User Click
function userFlash(btn) {
    btn.classList.add("userFlash");
    setTimeout(function () {
        btn.classList.remove("userFlash");
    }, 250);
}

// ========================
// Generate Next Level
// ========================
function levelUp() {
    userSeq = []; // Clear user's sequence for new level
    level++; // Increase level
    
    h2.style.opacity = 0;
    setTimeout(() => {
        h2.innerHTML = "Level " + level;
        h2.style.opacity = 1;
    }, 200);

    let randomIndex = Math.floor(Math.random() * 4); // Random index 0-3
    let randomColor = btns[randomIndex]; // Pick a random color
    let randomButton = document.querySelector(`.${randomColor}`); // Find corresponding button
    gameSeq.push(randomColor); // Add to game sequence

    gameFlash(randomButton); // Flash the selected button
}

// ========================
// Check User's Answer
// ========================
function checkAns(idx) {
    if (userSeq[idx] === gameSeq[idx]) {
        // If user's latest click matches the game sequence
        if (userSeq.length === gameSeq.length) {
            setTimeout(levelUp, 1000); // Move to next level
        }
    } else {
        // If user's click is wrong
        playSound("wrong"); // Play wrong sound
        document.body.classList.add("game-over"); // Add game over class for effect

        setTimeout(() => {
            document.body.classList.remove("game-over");
        }, 400);

        if (level > highScore) {
            highScore = Math.max(0, level - 1);
            localStorage.setItem("highScore", highScore);
        }

        highScoreTitle.innerText = `High Score: ${highScore}`; // Update high score on page
        h2.innerHTML = `Game Over! Your score was <b>${Math.max(0, level - 1)}</b><br>Press Start to play again.`;

        reset(); // Reset game variables
    }
}

// ========================
// Handle Button Clicks
// ========================
function btnPress() {
    let btn = this;
    userFlash(btn); // Animate button when clicked

    let userColor = btn.getAttribute("id"); // Get color of clicked button
    userSeq.push(userColor); // Save user's click to their sequence

    checkAns(userSeq.length - 1); // Check the latest answer
}

// ========================
// Attach Click Events to All Buttons
// ========================
const allBtns = document.querySelectorAll(".btn");
for (const btn of allBtns) {
    btn.addEventListener("click", btnPress);
}

// ========================
// Reset Game Variables
// ========================
function reset() {
    gameSeq = [];
    userSeq = [];
    level = 0;
    started = false;
    startBtn.style.display = "inline-block"; // Show Start button again after game over
}

// ========================
// Play Button or Error Sounds
// ========================
function playSound(name) {
    let audio = new Audio(`sounds/${name}.mp3`);
    audio.play();
}
